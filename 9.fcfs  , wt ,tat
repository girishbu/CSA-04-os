#include <stdio.h>

#define MAX_PROCESS 3

typedef struct {
    int process_id;
    int burst_time;
    int arrival_time;
    int waiting_time;
    int turnaround_time;
} Process;

void calculateTimes(Process processes[]) {
    int total_waiting_time = 0;
    int total_turnaround_time = 0;
    int current_time = 0;

    for (int i = 0; i < MAX_PROCESS; i++) {
        if (processes[i].arrival_time > current_time) {
            current_time = processes[i].arrival_time;
        }

        processes[i].waiting_time = current_time - processes[i].arrival_time;
        processes[i].turnaround_time = processes[i].waiting_time + processes[i].burst_time;

        current_time += processes[i].burst_time;

        total_waiting_time += processes[i].waiting_time;
        total_turnaround_time += processes[i].turnaround_time;
    }

    float average_waiting_time = (float)total_waiting_time / MAX_PROCESS;
    float average_turnaround_time = (float)total_turnaround_time / MAX_PROCESS;

    printf("Average Waiting Time: %.2f\n", average_waiting_time);
    printf("Average Turnaround Time: %.2f\n", average_turnaround_time);
}

int main() {
    Process processes[MAX_PROCESS] = {
        {0, 2, 0, 0, 0},
        {1, 4, 0, 0, 0},
        {2, 8, 0, 0, 0}
    };

    calculateTimes(processes);

    return 0;
}
